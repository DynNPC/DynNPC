simulator:
    init : without threadings   +   handle_zones
    status : npc static state as args   +   NPC_behavior_status
    copy : only threadings, except Error    +   NPC_behavior_try
    N1 : use N1_cnt control at most twice continuous N1 action + NPC_behavior_N1
sim.raycast:
    ADD if type(hit) is dict: after "Error: transform key 4" type(hit) is dict

utils.raycast_to_ground:
    ADD logger.info("error"): if type(hit) is dict -> return hit is None -> logger  +   return None

main:
    junction test


junction:
    |  | bubble边界 | 十字路口边界 | ego |
| --- | --- | --- | --- |
| 1 | (-371.150268554688, 10.1996088027954, 354.707366943359) | (-392.839660644531, 10.1996097564697, 375.433532714844) | (-349.461120605469, 10.1996097564697, 333.981079101563) |
| 2 | (-368.677581787109, 10.1996088027954, 357.294891357422) | (-390.367065429688, 10.1996097564697, 378.021026611328) | (-347.076721191406, 10.2067356109619, 336.961761474609) |
| 5 | (-376.021881103516, 10.199610710144, 422.406066894531) | (-396.731628417969, 10.1996068954468, 400.7001953125) |  |
| 6 | (-379.677001953125, 10.199610710144, 424.517181396484) | (-399.511901855469, 10.199610710144, 403.340667724609) |  |
| 9 | (-442.761352539063, 10.1996097564697, 417.275726318359) | (-421.072235107422, 10.1996097564697, 396.549499511719) |  |
| 10 | (-445.365966796875, 10.1996097564697, 414.550018310547) | (-423.6767578125, 10.1996097564697, 393.823822021484) |  |
| 13 | (-438.050659179688, 10.199610710144, 351.6552734375) | (-417.415374755859, 10.199610710144, 373.430694580078) |  |
| 14 | (-435.229675292969, 10.1996097564697, 348.961944580078) | (-414.593963623047, 10.1996097564697, 370.736999511719) |  |
| 16 | (-374.079437255859, 10.1996097564697, 351.641784667969) | (-395.768859863281, 10.199610710144, 372.367950439453) |  |
| 15 | (-376.684020996094, 10.1996097564697, 348.916046142578) | (-398.37353515625, 10.199610710144, 369.642242431641) |  |
| 7 | (-437.359832763672, 10.199610710144, 422.929077148438) | (-415.670593261719, 10.1996097564697, 402.202819824219) | des_right_straight |
| 8 | (-439.832458496094, 10.1996097564697, 420.341522216797) | (-418.143218994141, 10.1996097564697, 399.615264892578) | des_left_straight |
| 12 | (-441.024810791016, 10.199610710144, 354.510986328125) | (-420.241058349609, 10.1996116638184, 376.14501953125) | des_left_turn |
| 3 | (-370.503509521484, 10.1996097564697, 417.133361816406) | (-391.234008789063, 10.1996097564697, 395.448150634766) | des_right_turn |
| 4 | (-373.434234619141, 10.1996097564697, 419.931732177734)  | (-394.138824462891, 10.199610710144, 398.221557617188)| |
| 11 | (-443.683532714844, 10.1996088027954, 357.049682617188) | (-423.046569824219, 10.1996088027954, 378.823577880859) | |


traffic signals:
    1/2 :
        {'type': 'signal', 'transform': 'Transform(position=Vector(-402.693878173828, 15.9500017166138, 379.290496826172), rotation=Vector(0, 313.699432373047, 0))', 'valid_actions': "['green', 'yellow', 'red', 'black', 'trigger', 'wait', 'loop']", 'default_control_policy': "[{'action': 'state', 'value': 'red'}, {'action': 'wait', 'value': '20'}, {'action': 'state', 'value': 'green'}, {'action': 'wait', 'value': '15'}, {'action': 'state', 'value': 'yellow'}, {'action': 'wait', 'value': '3'}, {'action': 'state', 'value': 'red'}, {'action': 'wait', 'value': '2'}, {'action': 'loop', 'value': ''}]"}
    5/6 :
        {'type': 'signal', 'transform': 'Transform(position=Vector(-400.266174316406, 15.9500017166138, 391.412811279297), rotation=Vector(0, 223.461181640625, 0))', 'valid_actions': "['green', 'yellow', 'red', 'black', 'trigger', 'wait', 'loop']", 'default_control_policy': "[{'action': 'state', 'value': 'green'}, {'action': 'wait', 'value': '15'}, {'action': 'state', 'value': 'yellow'}, {'action': 'wait', 'value': '3'}, {'action': 'state', 'value': 'red'}, {'action': 'wait', 'value': '22'}, {'action': 'loop', 'value': ''}]"}
    9/10 :
        {'type': 'signal', 'transform': 'Transform(position=Vector(-412.643188476563, 15.9500017166138, 393.771057128906), rotation=Vector(0, 133.698745727539, 0))', 'valid_actions': "['green', 'yellow', 'red', 'black', 'trigger', 'wait', 'loop']", 'default_control_policy': "[{'action': 'state', 'value': 'red'}, {'action': 'wait', 'value': '20'}, {'action': 'state', 'value': 'green'}, {'action': 'wait', 'value': '15'}, {'action': 'state', 'value': 'yellow'}, {'action': 'wait', 'value': '3'}, {'action': 'state', 'value': 'red'}, {'action': 'wait', 'value': '2'}, {'action': 'loop', 'value': ''}]"}   


        Traceback (most recent call last):
  File "/mnt/sda/AdvFuzz/src/main.py", line 80, in <module>
    fuzzer.loop()
  File "/mnt/sda/AdvFuzz/src/main.py", line 49, in loop
    self.mutation_runner.process()
  File "/mnt/sda/AdvFuzz/src/modules/mutation/genetic_algorithm.py", line 464, in process
    newPop = restart.generate_restart_scenarios_int(self.runner, self.ga_log, i, oldCkName, 1000, self.bounds)
  File "/mnt/sda/AdvFuzz/src/modules/mutation/restart.py", line 190, in generate_restart_scenarios_int
    simi = tools.get_similarity_between_scenarios(scenario1, scenario2)
  File "/mnt/sda/AdvFuzz/src/modules/mutation/tools.py", line 48, in get_similarity_between_scenarios
    scenario_sim_ego = get_similarity_between_egos(ego1, ego2)
  File "/mnt/sda/AdvFuzz/src/modules/mutation/tools.py", line 26, in get_similarity_between_egos
    start1 = ego1[0]
IndexError: list index out of range